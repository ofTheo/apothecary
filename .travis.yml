language: c++

matrix:
  include:
# fully specify builds, include can't dynamically expand matrix entries
# relative order of sudo and env is important so that addons: is recognized

    # linux 64
    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
       - TARGET="linux"
       - OPT="gcc4"

    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="linux"
        - OPT="gcc5"

    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="linux"
        - OPT="gcc6"

    # android
    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="android"
        - ARCH="armv7"

      # cache:
        # directories:
        # - ~/android-ndk-r15c
        # - apothecary/build/Toolchains/armv7
    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="android"
        - ARCH="arm64"

      # cache:
        # directories:
        # - ~/android-ndk-r15c
        # - apothecary/build/Toolchains/arm64

    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="android"
        - ARCH="x86"
      # cache:
        # directories:
        # - ~/android-ndk-r15c
        # - apothecary/build/Toolchains/x86


    # emscripten
    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="emscripten"
      services:
        - docker
      before_install:
        - docker run -dit --name emscripten -v $(pwd):/src trzeci/emscripten:sdk-incoming-64bit bash


    # linux arm6
    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="linuxarmv6l"
        - SYSROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/raspbian"
        - TOOLCHAIN_ROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/rpi_toolchain"
        - TOOLCHAIN_PREFIX=arm-linux-gnueabihf

    # linux arm7
    - os: linux
      cache: ccache
      sudo: required
      dist: trusty
      env:
        - TARGET="linuxarmv7l"
        - SYSROOT="$HOME/archlinux"
        - TOOLCHAIN_ROOT="$HOME/rpi2_toolchain"
        - TOOLCHAIN_PREFIX=arm-linux-gnueabihf

    # osx xcode12
    - os: osx
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      osx_image: xcode12.2
      compiler: clang
      env:
        - TARGET="osx"
        - BUNDLE="1"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      osx_image: xcode12.2
      compiler: clang
      env:
        - TARGET="osx"
        - BUNDLE="2"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      osx_image: xcode12.2
      compiler: clang
      env:
        - TARGET="osx"
        - BUNDLE="3"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      osx_image: xcode12.2
      compiler: clang
      env:
        - TARGET="osx"
        - BUNDLE="4"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    # ios
    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="ios"
        - BUNDLE="1"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="ios"
        - BUNDLE="2"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="ios"
        - BUNDLE="3"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="ios"
        - BUNDLE="4"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    # tvos
    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="tvos"
        - BUNDLE="1"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="tvos"
        - BUNDLE="2"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="tvos"
        - BUNDLE="3"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

    - os: osx
      osx_image: xcode12.2
      cache:
        ccache: true
        directories:
         - $HOME/Library/Caches/Homebrew
         - ${HOME}/.homebrew-cache
      compiler: clang
      env:
        - TARGET="tvos"
        - BUNDLE="4"
        - DEVELOPER_DIR="/Applications/Xcode-12.2.app/Contents/Developer"

  exclude:
    - compiler: gcc
before_install:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ] && [ -d "${HOME}/.homebrew-cache" ]; then cp -f -R "${HOME}/.homebrew-cache" "/usr/local/Homebrew"; fi
  - scripts/calculate_formulas.sh
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew pin gdal; brew pin postgis; fi
install:
  - scripts/$TARGET/install.sh
script:
  - scripts/build.sh
  
before_cache:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi
# Credit https://discourse.brew.sh/t/best-practice-for-homebrew-on-travis-brew-update-is-5min-to-build-time/5215/9
# Cache only .git files under "/usr/local/Homebrew" so "brew update" does not take 5min every build
# Find workaround on macOS due to https://superuser.com/a/1459901/151744
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then rm -rf "${HOME}/.homebrew-cache" && cp -f -R "/usr/local/Homebrew" "${HOME}/.homebrew-cache"; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then cd "${HOME}/.homebrew-cache" && find . \! -regex ".+\.git.+" -delete; fi

git:
    depth: 10
